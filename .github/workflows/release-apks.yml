name: release

on:
  push:
    branches:
      - 'master'

jobs:
  builds:
    name: Build and upload release APK
    runs-on: macos-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.TEST_USER_SSH_KEY }}
          known_hosts: ${{ secrets.TEST_USER_KNOWN_HOSTS }}

      - name: Use NPM Token with organization read access
        uses: dkershner6/use-npm-token-action@v1
        with:
          token: "${{ secrets.NPMJS_READ }}"

      - name: Install Node.js dependencies
        run: yarn install

      - name: Install Swig
        run: brew install swig

      - name: Build Android App Bundle
        run: yarn bundle

      - name: List APKs
        run: |
          ls android/app/build/outputs/apk/release

      - name: Sign App Bundle
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_SIGNING_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Signed App Bundle
          path: android/app/build/outputs/apk/release
          if-no-files-found: error

      - name: curl
        run: |
          curl -X POST -H "Content-Type:\ application/json" --data '{"text":"Latest APK builds available here: https://github.com/${{ github.event.repository.owner.name }}/${{ github.event.repository.name }}/actions/runs/${{ github.run_id }}"}' ${{ secrets.SLACK_WEBHOOK }}
